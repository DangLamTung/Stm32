/*
 * mpu6050.c
 *
 *  Created on: Jun 12, 2019
 *      Author: PC
 */
char init_MPU(){
    char status = 1;
    uint8_t d[2];
    if (HAL_I2C_IsDeviceReady(&hi2c1, device_address, 3, 1000) != HAL_OK) {
    	 printf("No device\r \n");
      }
      else{
    	  printf("Device found \r \n");
      }
	/* Try to transmit via I2C */
	d[0] = PWR_MGMT_1;
    d[1] = 0;
	if(HAL_I2C_Master_Transmit(&hi2c1,(uint16_t)device_address , (uint8_t *)d, 2, 1000) != HAL_OK)
	{
		status = 0;
	}
	/* Set data sample rate */
	d[0] = SAMPLE_RATE;
	d[1] = sample_1khz;
	while(HAL_I2C_Master_Transmit(&hi2c1,(uint16_t)device_address,(uint8_t *)d,2,1000)!=HAL_OK);

	d[0] = GYRO_CONFIG;
	d[1] = gyro_con;
	while(HAL_I2C_Master_Transmit(&hi2c1,(uint16_t)device_address,(uint8_t *)d,2,1000)!=HAL_OK);

	d[0] = ACCEL_CONFIG;
	d[1] = 0x00;
	while(HAL_I2C_Master_Transmit(&hi2c1,(uint16_t)device_address,(uint8_t *)d,2,1000)!=HAL_OK);

	d[0] = INIT_ENB;
	d[1] = inter;
	while(HAL_I2C_Master_Transmit(&hi2c1,(uint16_t)device_address,(uint8_t *)d,2,1000)!=HAL_OK);

  return status;
}
void read_MPU(){
	uint8_t data[13];
    uint8_t reg = ACCEL_XOUT_H;
    /* Read accelerometer reg*/
    while(HAL_I2C_Master_Transmit(&hi2c1,(uint16_t)device_address, &reg, 1, 1000) != HAL_OK);
    while(HAL_I2C_Master_Receive(&hi2c1,(uint16_t)device_address, data,14, 1000) != HAL_OK);

		/* Format */

	Acc_x = (int16_t)(data[0] << 8 | data[1]);
	Acc_yr = (int16_t)(data[2] << 8 | data[3]);
	Acc_zr = (int16_t)(data[4] << 8 | data[5]);
	temp = (int16_t)(data[6] << 8 | data[7]);
	Gyro_xr = (int16_t)(data[8] << 8 | data[9]);
	Gyro_yr = (int16_t)(data[10] << 8 | data[11]);
	Gyro_zr = (int16_t)(data[12] << 8 | data[13]);
	float Temperature = 345.612;

	Acc_x =  Acc_x/accel_factor;
	Acc_y =  Acc_yr/accel_factor;
	Acc_z =  Acc_zr/accel_factor;

	Gyro_x /= gyro_factor;
	Gyro_y /= gyro_factor;
	Gyro_z /= gyro_factor;
	char buffer[7];

    roll = atan2(Acc_y,Acc_z)*RAD2DEC;
    pitch = atan(-Acc_x/sqrt(Acc_y*Acc_y+Acc_z*Acc_z))*RAD2DEC;

    ftoa(roll, buffer, 2);
    HAL_UART_Transmit(&huart1, buffer, 7, 1000);
    printf("Pitch \n\r");


    //printf( \n\r",Temperature);
}



